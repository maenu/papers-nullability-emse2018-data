getter,classification,comment,,class,method
false,FALSE,,,com.google.common.base.CharMatcher,and(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;
false,FALSE,,,com.google.common.base.CharMatcher,negate()Lcom/google/common/base/CharMatcher;
false,FALSE,,,com.google.common.base.Joiner,appendTo(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
false,FALSE,,,com.google.common.base.Joiner,join(Ljava/lang/Iterable;)Ljava/lang/String;
false,FALSE,,,com.google.common.base.MoreObjects$ToStringHelper,add(Ljava/lang/String;D)Lcom/google/common/base/MoreObjects$ToStringHelper;
false,FALSE,,,com.google.common.base.MoreObjects$ToStringHelper,add(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
false,FALSE,,,com.google.common.base.MoreObjects$ToStringHelper,add(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
false,FALSE,,,com.google.common.base.MoreObjects$ToStringHelper,add(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
false,FALSE,,,com.google.common.base.MoreObjects$ToStringHelper,addValue(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
true,FALSE,,,com.google.common.base.Splitter,omitEmptyStrings()Lcom/google/common/base/Splitter;
false,FALSE,,,com.google.common.base.Splitter,split(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
false,FALSE,,,com.google.common.cache.CacheBuilder,concurrencyLevel(I)Lcom/google/common/cache/CacheBuilder;
true,TRUE,,,com.google.common.cache.CacheBuilder,getStatsCounterSupplier()Lcom/google/common/base/Supplier;
false,FALSE,,,com.google.common.cache.CacheBuilder,keyEquivalence(Lcom/google/common/base/Equivalence;)Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheBuilder,removalListener(Lcom/google/common/cache/RemovalListener;)Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheBuilder,setKeyStrength(Lcom/google/common/cache/LocalCache$Strength;)Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheBuilder,setValueStrength(Lcom/google/common/cache/LocalCache$Strength;)Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheBuilder,valueEquivalence(Lcom/google/common/base/Equivalence;)Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheBuilder,weakKeys()Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheBuilderSpec,toCacheBuilder()Lcom/google/common/cache/CacheBuilder;
false,FALSE,,,com.google.common.cache.CacheLoader,loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
false,FALSE,,,com.google.common.cache.CacheLoader,reload(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;
false,FALSE,,,com.google.common.cache.LocalCache$EntryFactory,copyEntry(Lcom/google/common/cache/LocalCache$Segment;Lcom/google/common/cache/LocalCache$ReferenceEntry;Lcom/google/common/cache/LocalCache$ReferenceEntry;)Lcom/google/common/cache/LocalCache$ReferenceEntry;
true,TRUE,iterator,,com.google.common.cache.LocalCache$HashIterator,nextEntry()Lcom/google/common/cache/LocalCache$WriteThroughEntry;
false,FALSE,,,com.google.common.cache.LocalCache$LoadingValueReference,loadFuture(Ljava/lang/Object;Lcom/google/common/cache/CacheLoader;)Lcom/google/common/util/concurrent/ListenableFuture;
false,FALSE,,,com.google.common.cache.LocalCache$ManualSerializationProxy,recreateCacheBuilder()Lcom/google/common/cache/CacheBuilder;
true,TRUE,lazy,,com.google.common.collect.AbstractBiMap,entrySet()Ljava/util/Set;
true,TRUE,,,com.google.common.collect.AbstractBiMap,inverse()Lcom/google/common/collect/BiMap;
false,TRUE,different name,,com.google.common.collect.AbstractMapBasedMultimap,backingMap()Ljava/util/Map;
true,TRUE,,,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,getDelegate()Ljava/util/Collection;
false,TRUE,down-cast,,com.google.common.collect.AbstractMapBasedMultimap$WrappedList,getListDelegate()Ljava/util/List;
true,TRUE,lazy,,com.google.common.collect.AbstractMultimap,asMap()Ljava/util/Map;
true,TRUE,lazy,,com.google.common.collect.AbstractMultimap,entries()Ljava/util/Collection;
true,TRUE,lazy,,com.google.common.collect.AbstractMultimap,keySet()Ljava/util/Set;
true,TRUE,lazy,,com.google.common.collect.AbstractMultiset,elementSet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.FilteredEntryMultimap,keySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.FluentIterable,filter(Lcom/google/common/base/Predicate;)Lcom/google/common/collect/FluentIterable;
false,FALSE,,,com.google.common.collect.FluentIterable,filter(Ljava/lang/Class;)Lcom/google/common/collect/FluentIterable;
false,FALSE,,,com.google.common.collect.FluentIterable,first()Lcom/google/common/base/Optional;
false,FALSE,,,com.google.common.collect.ForwardingCollection,iterator()Ljava/util/Iterator;
false,FALSE,,,com.google.common.collect.ForwardingMap,entrySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.ForwardingMap,keySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.ForwardingMultiset,entrySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap,forward()Ljava/util/NavigableMap;
true,TRUE,,,com.google.common.collect.GeneralRange,getLowerBoundType()Lcom/google/common/collect/BoundType;
true,TRUE,,,com.google.common.collect.GeneralRange,getUpperBoundType()Lcom/google/common/collect/BoundType;
false,FALSE,,,com.google.common.collect.ImmutableClassToInstanceMap$Builder,putAll(Ljava/util/Map;)Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder;
false,FALSE,,,com.google.common.collect.ImmutableCollection,asList()Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.ImmutableList,iterator()Lcom/google/common/collect/UnmodifiableIterator;
false,FALSE,,,com.google.common.collect.ImmutableList,reverse()Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.ImmutableList,subList(II)Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.ImmutableList$Builder,add(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;
false,FALSE,,,com.google.common.collect.ImmutableList$Builder,addAll(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableList$Builder;
false,FALSE,,,com.google.common.collect.ImmutableList$Builder,build()Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.ImmutableListMultimap,get(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.ImmutableListMultimap$Builder,build()Lcom/google/common/collect/ImmutableListMultimap;
false,FALSE,,,com.google.common.collect.ImmutableListMultimap$Builder,putAll(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableListMultimap$Builder;
true,TRUE,lazy,,com.google.common.collect.ImmutableMap,entrySet()Lcom/google/common/collect/ImmutableSet;
true,TRUE,lazy,,com.google.common.collect.ImmutableMap,keySet()Lcom/google/common/collect/ImmutableSet;
true,TRUE,lazy,,com.google.common.collect.ImmutableMap,values()Lcom/google/common/collect/ImmutableCollection;
false,FALSE,,,com.google.common.collect.ImmutableMap$Builder,build()Lcom/google/common/collect/ImmutableMap;
false,FALSE,,,com.google.common.collect.ImmutableMap$Builder,put(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
false,TRUE,,,com.google.common.collect.ImmutableMultimap,asMap()Lcom/google/common/collect/ImmutableMap;
false,TRUE,"lazy, super down-cast",,com.google.common.collect.ImmutableMultimap,entries()Lcom/google/common/collect/ImmutableCollection;
false,TRUE,"lazy, super down-cast",,com.google.common.collect.ImmutableMultimap,values()Lcom/google/common/collect/ImmutableCollection;
true,TRUE,lazy,,com.google.common.collect.ImmutableMultiset,entrySet()Lcom/google/common/collect/ImmutableSet;
false,FALSE,,,com.google.common.collect.ImmutableMultiset$Builder,add([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset$Builder;
false,FALSE,,,com.google.common.collect.ImmutableMultiset$Builder,add(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset$Builder;
false,FALSE,,,com.google.common.collect.ImmutableRangeSet,subRangeSet(Lcom/google/common/collect/Range;)Lcom/google/common/collect/ImmutableRangeSet;
false,FALSE,,,com.google.common.collect.ImmutableRangeSet$Builder,addAll(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableRangeSet$Builder;
true,TRUE,lazy,,com.google.common.collect.ImmutableSet,asList()Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.ImmutableSet$Builder,add(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$Builder;
false,FALSE,,,com.google.common.collect.ImmutableSet$Builder,addAll(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet$Builder;
false,FALSE,,,com.google.common.collect.ImmutableSet$Builder,addAll(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSet$Builder;
false,FALSE,,,com.google.common.collect.ImmutableSetMultimap$Builder,build()Lcom/google/common/collect/ImmutableSetMultimap;
false,FALSE,,,com.google.common.collect.ImmutableSetMultimap$Builder,putAll(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSetMultimap$Builder;
false,FALSE,,,com.google.common.collect.ImmutableSortedMultiset$Builder,addAll(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSortedMultiset$Builder;
true,TRUE,,,com.google.common.collect.ImmutableSortedSet,comparator()Ljava/util/Comparator;
false,FALSE,,,com.google.common.collect.ImmutableSortedSet,headSet(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;
false,FALSE,,,com.google.common.collect.ImmutableSortedSet,subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;
false,FALSE,,,com.google.common.collect.ImmutableSortedSet,tailSet(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;
false,FALSE,,,com.google.common.collect.ImmutableSortedSet$Builder,add([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedSet$Builder;
false,FALSE,,,com.google.common.collect.ImmutableSortedSet$Builder,addAll(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSortedSet$Builder;
false,TRUE,"lazy, super down-cast",,com.google.common.collect.ImmutableTable,cellSet()Lcom/google/common/collect/ImmutableSet;
false,FALSE,,,com.google.common.collect.ImmutableTable,columnKeySet()Lcom/google/common/collect/ImmutableSet;
false,FALSE,,,com.google.common.collect.ImmutableTable,get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
false,FALSE,,,com.google.common.collect.ImmutableTable,rowKeySet()Lcom/google/common/collect/ImmutableSet;
false,TRUE,"lazy, super down-cast",,com.google.common.collect.ImmutableTable,values()Lcom/google/common/collect/ImmutableCollection;
true,FALSE,incompatible types,,com.google.common.collect.Interners$InternerBuilder,strong()Lcom/google/common/collect/Interners$InternerBuilder;
false,FALSE,incompatible types,,com.google.common.collect.Interners$InternerBuilder,weak()Lcom/google/common/collect/Interners$InternerBuilder;
false,TRUE,"lazy, inherited",,com.google.common.collect.LinkedListMultimap,keySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.LinkedListMultimap,removeAll(Ljava/lang/Object;)Ljava/util/List;
false,FALSE,,,com.google.common.collect.MapMaker,initialCapacity(I)Lcom/google/common/collect/MapMaker;
false,FALSE,,,com.google.common.collect.MapMaker,keyEquivalence(Lcom/google/common/base/Equivalence;)Lcom/google/common/collect/MapMaker;
false,FALSE,,,com.google.common.collect.MapMaker,setKeyStrength(Lcom/google/common/collect/MapMakerInternalMap$Strength;)Lcom/google/common/collect/MapMaker;
false,FALSE,,,com.google.common.collect.MapMaker,setValueStrength(Lcom/google/common/collect/MapMakerInternalMap$Strength;)Lcom/google/common/collect/MapMaker;
false,FALSE,,,com.google.common.collect.MapMaker,weakKeys()Lcom/google/common/collect/MapMaker;
false,FALSE,,,com.google.common.collect.MapMaker,weakValues()Lcom/google/common/collect/MapMaker;
false,FALSE,,,com.google.common.collect.MapMakerInternalMap,getEntry(Ljava/lang/Object;)Lcom/google/common/collect/MapMakerInternalMap$InternalEntry;
false,FALSE,,,com.google.common.collect.MapMakerInternalMap,valueEquivalence()Lcom/google/common/base/Equivalence;
false,FALSE,,,com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy,readMapMaker(Ljava/io/ObjectInputStream;)Lcom/google/common/collect/MapMaker;
true,TRUE,iterator,,com.google.common.collect.MapMakerInternalMap$HashIterator,nextEntry()Lcom/google/common/collect/MapMakerInternalMap$WriteThroughEntry;
false,FALSE,,,com.google.common.collect.Maps$FilteredEntrySortedMap,headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
false,TRUE,different name,,com.google.common.collect.Maps$FilteredEntrySortedMap,sortedMap()Ljava/util/SortedMap;
false,FALSE,,,com.google.common.collect.Maps$FilteredEntrySortedMap,subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
false,FALSE,,,com.google.common.collect.Maps$FilteredEntrySortedMap,tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
true,TRUE,,,com.google.common.collect.Maps$KeySet,map()Ljava/util/Map;
true,TRUE,lazy,,com.google.common.collect.Maps$ViewCachingAbstractMap,entrySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.MinMaxPriorityQueue,removeAt(I)Lcom/google/common/collect/MinMaxPriorityQueue$MoveDesc;
false,FALSE,,,com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,arrayListValues()Lcom/google/common/collect/MultimapBuilder$ListMultimapBuilder;
false,FALSE,,,com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,linkedHashSetValues()Lcom/google/common/collect/MultimapBuilder$SetMultimapBuilder;
true,TRUE,,,com.google.common.collect.MutableClassToInstanceMap,delegate()Ljava/util/Map;
false,FALSE,,,com.google.common.collect.Ordering,immutableSortedCopy(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.Ordering,max(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
false,FALSE,,,com.google.common.collect.Ordering,min(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
false,FALSE,,,com.google.common.collect.Ordering,onKeys()Lcom/google/common/collect/Ordering;
false,FALSE,,,com.google.common.collect.Ordering,onResultOf(Lcom/google/common/base/Function;)Lcom/google/common/collect/Ordering;
false,FALSE,,,com.google.common.collect.Ordering,reverse()Lcom/google/common/collect/Ordering;
false,FALSE,,,com.google.common.collect.Range,canonical(Lcom/google/common/collect/DiscreteDomain;)Lcom/google/common/collect/Range;
false,FALSE,,,com.google.common.collect.Range,intersection(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;
false,FALSE,,,com.google.common.collect.Range,span(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;
true,TRUE,,,com.google.common.collect.RegularImmutableAsList,delegateList()Lcom/google/common/collect/ImmutableList;
false,FALSE,,,com.google.common.collect.RegularImmutableAsList,get(I)Ljava/lang/Object;
true,TRUE,,,com.google.common.collect.SortedMultisets$ElementSet,multiset()Lcom/google/common/collect/SortedMultiset;
true,TRUE,lazy,,com.google.common.collect.StandardTable,columnKeySet()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.StandardTable$ColumnMap,get(Ljava/lang/Object;)Ljava/util/Map;
false,TRUE,super down-cast,,com.google.common.collect.Synchronized$SynchronizedMap,delegate()Ljava/util/Map;
false,TRUE,super down-cast,,com.google.common.collect.Synchronized$SynchronizedSet,delegate()Ljava/util/Set;
false,FALSE,,,com.google.common.collect.TreeMultiset$AvlNode,add(Ljava/util/Comparator;Ljava/lang/Object;I[I)Lcom/google/common/collect/TreeMultiset$AvlNode;
false,TRUE,different name,,com.google.common.collect.TreeMultiset$Reference,get()Ljava/lang/Object;
false,FALSE,,,com.google.common.collect.TreeRangeMap,getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
false,TRUE,different name,,com.google.common.collect.TreeRangeMap$RangeMapEntry,getKey()Lcom/google/common/collect/Range;
false,FALSE,,,com.google.common.collect.TreeRangeMap$RangeMapEntry,getUpperBound()Lcom/google/common/collect/Cut;
true,TRUE,,,com.google.common.collect.TreeRangeMap$RangeMapEntry,getValue()Ljava/lang/Object;
false,FALSE,,,com.google.common.collect.TreeRangeSet,rangeContaining(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;
true,TRUE,,,com.google.common.escape.ArrayBasedEscaperMap,getReplacementArray()[[C
false,FALSE,,,com.google.common.escape.Escapers$Builder,addEscape(CLjava/lang/String;)Lcom/google/common/escape/Escapers$Builder;
true,TRUE,,,com.google.common.eventbus.SubscriberExceptionContext,getEventBus()Lcom/google/common/eventbus/EventBus;
true,TRUE,,,com.google.common.eventbus.SubscriberExceptionContext,getSubscriberMethod()Ljava/lang/reflect/Method;
false,FALSE,,,com.google.common.eventbus.SubscriberRegistry,getSubscribers(Ljava/lang/Object;)Ljava/util/Iterator;
false,FALSE,,,com.google.common.graph.AbstractNetwork$1,nodes()Ljava/util/Set;
false,FALSE,,,com.google.common.graph.AbstractNetwork$1,successors(Ljava/lang/Object;)Ljava/util/Set;
false,FALSE,,,com.google.common.graph.ConfigurableNetwork,incidentNodes(Ljava/lang/Object;)Lcom/google/common/graph/EndpointPair;
false,FALSE,,,com.google.common.graph.EndpointPair,adjacentNode(Ljava/lang/Object;)Ljava/lang/Object;
true,TRUE,,,com.google.common.graph.EndpointPair,nodeU()Ljava/lang/Object;
true,TRUE,,,com.google.common.graph.EndpointPair,nodeV()Ljava/lang/Object;
false,FALSE,,,com.google.common.graph.GraphBuilder,allowsSelfLoops(Z)Lcom/google/common/graph/GraphBuilder;
false,FALSE,,,com.google.common.graph.GraphBuilder,build()Lcom/google/common/graph/MutableGraph;
false,FALSE,,,com.google.common.graph.GraphBuilder,expectedNodeCount(I)Lcom/google/common/graph/GraphBuilder;
false,FALSE,,,com.google.common.graph.MapIteratorCache,get(Ljava/lang/Object;)Ljava/lang/Object;
false,FALSE,,,com.google.common.graph.NetworkBuilder,build()Lcom/google/common/graph/MutableNetwork;
false,FALSE,,,com.google.common.graph.NetworkBuilder,expectedEdgeCount(I)Lcom/google/common/graph/NetworkBuilder;
false,FALSE,,,com.google.common.graph.NetworkBuilder,expectedNodeCount(I)Lcom/google/common/graph/NetworkBuilder;
false,FALSE,,,com.google.common.graph.ValueGraphBuilder,build()Lcom/google/common/graph/MutableValueGraph;
false,FALSE,,,com.google.common.graph.ValueGraphBuilder,expectedNodeCount(I)Lcom/google/common/graph/ValueGraphBuilder;
false,FALSE,,,com.google.common.hash.HashCode,getBytesInternal()[B
false,FALSE,,,com.google.common.io.BaseEncoding$StandardBaseEncoding,trimTrailingPadding(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
false,FALSE,,,com.google.common.io.ByteSource,sizeIfKnown()Lcom/google/common/base/Optional;
false,FALSE,,,com.google.common.io.Closer,register(Ljava/io/Closeable;)Ljava/io/Closeable;
true,TRUE,,,com.google.common.math.PairedStats,xStats()Lcom/google/common/math/Stats;
true,TRUE,,,com.google.common.math.PairedStats,yStats()Lcom/google/common/math/Stats;
false,FALSE,,,com.google.common.primitives.ImmutableDoubleArray,subArray(II)Lcom/google/common/primitives/ImmutableDoubleArray;
false,FALSE,,,com.google.common.primitives.ImmutableDoubleArray$Builder,addAll(Ljava/lang/Iterable;)Lcom/google/common/primitives/ImmutableDoubleArray$Builder;
false,FALSE,,,com.google.common.primitives.ImmutableIntArray,subArray(II)Lcom/google/common/primitives/ImmutableIntArray;
false,FALSE,,,com.google.common.primitives.ImmutableIntArray$Builder,addAll(Ljava/lang/Iterable;)Lcom/google/common/primitives/ImmutableIntArray$Builder;
false,FALSE,,,com.google.common.primitives.ImmutableLongArray,subArray(II)Lcom/google/common/primitives/ImmutableLongArray;
false,FALSE,,,com.google.common.primitives.ImmutableLongArray$Builder,addAll(Ljava/lang/Iterable;)Lcom/google/common/primitives/ImmutableLongArray$Builder;
false,FALSE,,,com.google.common.reflect.Invokable,getDeclaringClass()Ljava/lang/Class;
false,FALSE,,,com.google.common.reflect.TypeCapture,capture()Ljava/lang/reflect/Type;
false,FALSE,,,com.google.common.reflect.TypeResolver,where(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeResolver;
false,FALSE,,,com.google.common.reflect.TypeResolver,where(Ljava/util/Map;)Lcom/google/common/reflect/TypeResolver;
false,FALSE,,,com.google.common.reflect.TypeToken,getRawType()Ljava/lang/Class;
false,FALSE,,,com.google.common.reflect.TypeToken,getTypes()Lcom/google/common/reflect/TypeToken$TypeSet;
false,FALSE,,,com.google.common.reflect.TypeToken,resolveType(Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeToken;
false,FALSE,,,com.google.common.reflect.TypeToken$TypeCollector,classesOnly()Lcom/google/common/reflect/TypeToken$TypeCollector;
false,FALSE,,,com.google.common.reflect.TypeToken$TypeSet,rawTypes()Ljava/util/Set;
false,FALSE,,,com.google.common.util.concurrent.AbstractService,state()Lcom/google/common/util/concurrent/Service$State;
false,FALSE,,,com.google.common.util.concurrent.ThreadFactoryBuilder,setDaemon(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
false,FALSE,,,com.google.common.util.concurrent.ThreadFactoryBuilder,setNameFormat(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
false,FALSE,,,com.google.common.util.concurrent.ThreadFactoryBuilder,setThreadFactory(Ljava/util/concurrent/ThreadFactory;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;